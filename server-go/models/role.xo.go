// Package models contains the types for schema 'public'.
package models

// Code generated by xo. DO NOT EDIT.

import (
	"database/sql/driver"
	"errors"
)

// Role is the 'role' enum type from schema 'public'.
type Role uint16

const (
	// RoleUser is the 'user' Role.
	RoleUser = Role(1)

	// RoleAdmin is the 'admin' Role.
	RoleAdmin = Role(2)
)

// String returns the string value of the Role.
func (r Role) String() string {
	var enumVal string

	switch r {
	case RoleUser:
		enumVal = "user"

	case RoleAdmin:
		enumVal = "admin"
	}

	return enumVal
}

// MarshalText marshals Role into text.
func (r Role) MarshalText() ([]byte, error) {
	return []byte(r.String()), nil
}

// UnmarshalText unmarshals Role from text.
func (r *Role) UnmarshalText(text []byte) error {
	switch string(text) {
	case "user":
		*r = RoleUser

	case "admin":
		*r = RoleAdmin

	default:
		return errors.New("invalid Role")
	}

	return nil
}

// Value satisfies the sql/driver.Valuer interface for Role.
func (r Role) Value() (driver.Value, error) {
	return r.String(), nil
}

// Scan satisfies the database/sql.Scanner interface for Role.
func (r *Role) Scan(src interface{}) error {
	buf, ok := src.([]byte)
	if !ok {
		return errors.New("invalid Role")
	}

	return r.UnmarshalText(buf)
}
